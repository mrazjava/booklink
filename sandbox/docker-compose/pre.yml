# Bootstraps entire app, frontend, backend, depot and supporting artifacts (persistence, etc)
# from images built for a production release.
#
version: '3.3'
services:
  frontend:
    image: docker.io/mrazjava/booklink-frontend-vue:master
    container_name: BL_vue
    ports:
      - "8090:80"
    environment:
      FE_DEPLOY_ENV: pre
      FE_DEPLOY_BE_HOST: http://localhost:8080
      FE_FB_APPID: 1662925783847528
      FE_GL_APPID: 1022797606973-5j5ppvnp01qbqcqhqn1p6umh6n84kvpf.apps.googleusercontent.com
      FE_SANDBOX: 1
      # backward-compatibility: <= v0.2.0
      VUE_APP_BACKEND_HOST: http://localhost:8080
      VUE_APP_ENV: stg
  backend:
    image: docker.io/mrazjava/booklink-backend:master
    container_name: BL_backend
    ports:
      - "8080:8080"
    depends_on:
      - "pg"
    healthcheck:
      test: curl -f http://localhost:8080/actuator/health || exit 1
      interval: 10s
      timeout: 3s
      retries: 2
    environment:
      CORS_ALLOW_ORIGINS: http://localhost:8090
      APP_BE_DB_URL: jdbc:postgresql://pg:5432/booklink?currentSchema=${DB_SCHEMA}
      DEPOT_URL: http://depot:8080/
      APP_BE_HIBERNATE_DDL_AUTO: validate
      APP_SPRING_DATA_INIT: never
      APP_FLYWAY_ENABLED: 'true'
      FLYWAY_DEFAULT_SCHEMA: ${DB_SCHEMA}
      APP_ENV: pre
#
# To run pre-release sandbox against AWS pre-release database, use environment values
# below overwriting defined ones above. Optionally, we can comment out the 'pg' service
# since we wouldn't need a sandbox db. <REPLACE_ME> values are sensitive credentials
# that must be manually provided.
#
#      AWS_ACCESS_KEY_ID: <REPLACE_ME>
#      AWS_SECRET_ACCESS_KEY: <REPLACE_ME>
#      AWS_REGION: eu-central-1
#      APP_BE_DB_URL: jdbc-secretsmanager:postgresql://pre-1.cnzxipfrf9ok.eu-central-1.rds.amazonaws.com:5432/booklink
#      APP_BE_DB_USERNAME: pre1/postgres
#      APP_SPRING_DATA_DRIVER: com.amazonaws.secretsmanager.sql.AWSSecretsManagerPostgreSQLDriver
#      APP_FLYWAY_ENABLED: 'false'
#
  depot: # there are no environmental depot differences (APP_ENV)
    image: docker.io/mrazjava/booklink-openlibrary-depot:${OL_IMG_TAG}
    container_name: BL_depot
    ports:
      - "8070:8080"
    depends_on:
      - "mongo"
    environment:
      SPRING_PROFILES_ACTIVE: DEPOT
      SERVER_PORT: 8080
      BOOKLINK_MONGO_HOST: mongo
      BOOKLINK_MONGO_PORT: 27017